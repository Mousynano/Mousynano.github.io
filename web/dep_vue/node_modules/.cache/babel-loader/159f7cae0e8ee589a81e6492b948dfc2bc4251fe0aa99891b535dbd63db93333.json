{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"courses\"\n};\nconst _hoisted_2 = {\n  class: \"hero is-info\"\n};\nconst _hoisted_3 = {\n  class: \"hero-body has-text-centered\"\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"section\"\n};\nconst _hoisted_6 = {\n  class: \"container\"\n};\nconst _hoisted_7 = {\n  class: \"columns content\"\n};\nconst _hoisted_8 = {\n  class: \"column is-2\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"color\": \"white\"\n  }\n}, \"Isi\", -1);\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"column is-10\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"tag is-success\",\n  style: {\n    \"background-color\": \"#666\",\n    \"color\": \"whitesmoke\"\n  }\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Akses terbatas\", -1);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Mohon Log In dulu untuk lanjut\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_Quiz = _resolveComponent(\"Quiz\");\n  const _component_Video = _resolveComponent(\"Video\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", _hoisted_4, _toDisplayString($data.course.title), 1), _createVNode(_component_router_link, {\n    to: {\n      name: 'Author',\n      params: {\n        id: $data.course.created_by.id\n      }\n    },\n    class: \"subtitle\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" By \" + _toDisplayString($data.course.created_by.first_name + ' ' + $data.course.created_by.last_name), 1)]),\n    _: 1\n  }, 8, [\"to\"])])]), _createElementVNode(\"section\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.lessons, lesson => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: lesson.id\n    }, [_createElementVNode(\"a\", {\n      onClick: $event => $options.setActiveLesson(lesson)\n    }, _toDisplayString(lesson.title), 9, _hoisted_10)]);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_11, [$data.isAuthenticated ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$data.activeLesson ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"h2\", null, _toDisplayString($data.activeLesson.title), 1), $data.activity.status === 'started' ? (_openBlock(), _createElementBlock(\"span\", {\n    key: 0,\n    class: \"tag is-warning\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.markAsDone && $options.markAsDone(...args)),\n    style: {\n      \"background-color\": \"#555\",\n      \"color\": \"whitesmoke\"\n    }\n  }, \"Started (mark as done)\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"Done\")), _hoisted_13, _createTextVNode(\" \" + _toDisplayString($data.activeLesson.long_description) + \" \", 1), _hoisted_14, $data.activeLesson.lesson_type === 'quiz' ? (_openBlock(), _createBlock(_component_Quiz, {\n    key: 2,\n    quiz: $data.quiz\n  }, null, 8, [\"quiz\"])) : _createCommentVNode(\"\", true), $data.activeLesson.lesson_type === 'video' ? (_openBlock(), _createBlock(_component_Video, {\n    key: 3,\n    youtube_id: $data.activeLesson.youtube_id\n  }, null, 8, [\"youtube_id\"])) : _createCommentVNode(\"\", true), $data.activeLesson.lesson_type === 'article' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(comment.text), 1)]);\n  }), 128)), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newComment = $event),\n    placeholder: \"Add a comment\"\n  }, null, 512), [[_vModelText, $data.newComment]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.submitComment && $options.submitComment(...args))\n  }, \"Submit\")])], 64)) : _createCommentVNode(\"\", true)], 64)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($data.course.long_description), 1)], 64))], 64)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_hoisted_15, _hoisted_16], 64))])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","course","title","_createVNode","_component_router_link","to","name","params","id","created_by","first_name","last_name","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","lessons","lesson","key","onClick","$event","$options","setActiveLesson","_hoisted_10","_hoisted_11","isAuthenticated","activeLesson","activity","status","_cache","args","markAsDone","_hoisted_12","_hoisted_13","long_description","_hoisted_14","lesson_type","_createBlock","_component_Quiz","quiz","_component_Video","youtube_id","comments","comment","text","type","newComment","placeholder","submitComment","_hoisted_15","_hoisted_16"],"sources":["D:\\Kampus\\Project\\Web\\Mousynano.github.io\\web\\dep_vue\\src\\views\\Course.vue"],"sourcesContent":["<template>\r\n    <div class=\"courses\">\r\n      <div class=\"hero is-info\">\r\n        <div class=\"hero-body has-text-centered\">\r\n          <h1 class=\"title\">{{ course.title }}</h1>\r\n  \r\n          <router-link :to=\"{ name: 'Author', params: { id: course.created_by.id } }\" class=\"subtitle\">\r\n            By {{ course.created_by.first_name + ' ' + course.created_by.last_name }}\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n  \r\n      <section class=\"section\">\r\n        <div class=\"container\">\r\n          <div class=\"columns content\">\r\n            <div class=\"column is-2\">\r\n              <h2 style=\"color: white;\">Isi</h2>\r\n  \r\n              <ul>\r\n                <li v-for=\"lesson in lessons\" v-bind:key=\"lesson.id\">\r\n                  <a @click=\"setActiveLesson(lesson)\">{{ lesson.title }}</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n  \r\n            <div class=\"column is-10\">\r\n              <template v-if=\"isAuthenticated\">\r\n                <template v-if=\"activeLesson\">\r\n                  <h2>{{ activeLesson.title }}</h2>\r\n  \r\n                  <span class=\"tag is-warning\" v-if=\"activity.status === 'started'\" @click=\"markAsDone\" style=\"background-color: #555; color: whitesmoke\">Started (mark as done)</span>\r\n                  <span class=\"tag is-success\" v-else style=\"background-color: #666; color: whitesmoke\">Done</span>\r\n  \r\n                  <hr>\r\n  \r\n                  {{ activeLesson.long_description }}\r\n  \r\n                  <hr>\r\n  \r\n                  <template v-if=\"activeLesson.lesson_type === 'quiz'\">\r\n                    <Quiz v-bind:quiz=\"quiz\" />\r\n                  </template>\r\n  \r\n                  <template v-if=\"activeLesson.lesson_type === 'video'\">\r\n                    <Video v-bind:youtube_id=\"activeLesson.youtube_id\" />\r\n                  </template>\r\n  \r\n                  <template v-if=\"activeLesson.lesson_type === 'article'\">\r\n                    <div v-for=\"comment in comments\" v-bind:key=\"comment.id\">\r\n                      <p>{{ comment.text }}</p>\r\n                    </div>\r\n  \r\n                    <div>\r\n                      <input type=\"text\" v-model=\"newComment\" placeholder=\"Add a comment\" />\r\n                      <button @click=\"submitComment\">Submit</button>\r\n                    </div>\r\n                  </template>\r\n                </template>\r\n  \r\n                <template v-else>\r\n                  {{ course.long_description }}\r\n                </template>\r\n              </template>\r\n  \r\n              <template v-else>\r\n                <h2>Akses terbatas</h2>\r\n  \r\n                <p>Mohon Log In dulu untuk lanjut</p>\r\n              </template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import CourseComment from '@/components/CourseComment'\r\n  import Quiz from '@/components/Quiz'\r\n  import Video from '@/components/Video'\r\n  \r\n  export default {\r\n    components: {\r\n      CourseComment,\r\n      Quiz,\r\n      Video\r\n    },\r\n    data() {\r\n      return {\r\n        course: {\r\n          created_by: {\r\n            id: 0\r\n          }\r\n        },\r\n        lessons: [],\r\n        comments: [],\r\n        activeLesson: null,\r\n        isAuthenticated: true, // Ubah menjadi false jika ingin mensimulasikan akses terbatas\r\n        newComment: '',\r\n        quiz: {},\r\n        activity: {}\r\n      }\r\n    },\r\n    mounted() {\r\n      console.log('mounted')\r\n  \r\n      // Panggil method getCourses() di sini\r\n      this.getCourses()\r\n    },\r\n    methods: {\r\n      getCourses() {\r\n        // Simulasikan pengambilan data course dan lessons\r\n        this.course = {\r\n          title: 'Course Title',\r\n          created_by: {\r\n            id: 1,\r\n            first_name: 'John',\r\n            last_name: 'Doe'\r\n          },\r\n          long_description: 'Long description of the course'\r\n        }\r\n  \r\n        this.lessons = [\r\n          {\r\n            id: 1,\r\n            title: 'Lesson 1',\r\n            lesson_type: 'video',\r\n            youtube_id: 'abc123',\r\n            long_description: 'Long description of Lesson 1'\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Lesson 2',\r\n            lesson_type: 'article',\r\n            long_description: 'Long description of Lesson 2'\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'Lesson 3',\r\n            lesson_type: 'quiz',\r\n            long_description: 'Long description of Lesson 3'\r\n          }\r\n        ]\r\n      },\r\n      setActiveLesson(lesson) {\r\n        this.activeLesson = lesson\r\n  \r\n        if (lesson.lesson_type === 'quiz') {\r\n          this.getQuiz()\r\n        } else {\r\n          this.getComments()\r\n        }\r\n  \r\n        this.trackStarted()\r\n      },\r\n      trackStarted() {\r\n        // Simulasikan pengiriman data ke backend untuk melacak aktivitas dimulai\r\n        this.activity = {\r\n          status: 'started'\r\n        }\r\n      },\r\n      markAsDone() {\r\n        // Simulasikan pengiriman data ke backend untuk menandai aktivitas selesai\r\n        this.activity = {\r\n          status: 'done'\r\n        }\r\n      },\r\n      getQuiz() {\r\n        // Simulasikan pengambilan data quiz dari backend\r\n        this.quiz = {\r\n          // Data quiz\r\n        }\r\n      },\r\n      getComments() {\r\n        // Simulasikan pengambilan data komentar dari backend\r\n        this.comments = [\r\n          {\r\n            id: 1,\r\n            text: 'Comment 1'\r\n          },\r\n          {\r\n            id: 2,\r\n            text: 'Comment 2'\r\n          }\r\n        ]\r\n      },\r\n      submitComment() {\r\n        // Simulasikan pengiriman data komentar ke backend\r\n        const comment = {\r\n          id: this.comments.length + 1,\r\n          text: this.newComment\r\n        }\r\n        this.comments.push(comment)\r\n        this.newComment = ''\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}