{"ast":null,"code":"import '../../public/js/ace.js';\nimport '../../public/js/mode-php.js';\nimport '../../public/js/mode-javascript.js';\nimport '../../public/js/mode-c_cpp.js';\nimport '../../public/js/theme-monokai.js';\nimport '../../public/js/worker-php.js';\nexport default {\n  data() {\n    return {\n      selectedLanguage: 'c',\n      editor: null,\n      output: ''\n    };\n  },\n  mounted() {\n    this.editor = ace.edit('editor');\n    this.editor.setTheme('ace/theme/monokai');\n    this.changeLanguage();\n  },\n  methods: {\n    changeLanguage() {\n      const language = this.selectedLanguage;\n      if (language === 'c' || language === 'cpp') this.editor.session.setMode('ace/mode/c_cpp');else if (language === 'php') this.editor.session.setMode('ace/mode/php');else if (language === 'python') this.editor.session.setMode('ace/mode/python');else if (language === 'node') this.editor.session.setMode('ace/mode/javascript');\n    },\n    executeCode() {\n      const language = this.selectedLanguage;\n      const code = this.editor.getSession().getValue();\n\n      // Simulasikan eksekusi kode secara lokal\n      this.output = `Simulated output for ${language}: ${code}`;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedLanguage","editor","output","mounted","ace","edit","setTheme","changeLanguage","methods","language","session","setMode","executeCode","code","getSession","getValue"],"sources":["D:\\Kampus\\Project\\Web\\Mousynano.github.io\\web\\dep_vue\\src\\views\\Editor.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"header\">Coba IDE</div>\r\n    <div class=\"control-panel\">\r\n      Select Language:\r\n      &nbsp; &nbsp;\r\n      <select title=\"IDE\" v-model=\"selectedLanguage\" class=\"languages\" @change=\"changeLanguage\">\r\n        <option value=\"c\">C</option>\r\n        <option value=\"cpp\">C++</option>\r\n        <option value=\"php\">PHP</option>\r\n        <option value=\"python\">Python</option>\r\n        <option value=\"node\">Node JS</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"editor\" id=\"editor\"></div>\r\n\r\n    <div class=\"output\">{{ output }}</div>\r\n\r\n    <div class=\"button-container\">\r\n      <button class=\"btn\" @click=\"executeCode\">Run</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '../../public/js/ace.js';\r\nimport '../../public/js/mode-php.js';\r\nimport '../../public/js/mode-javascript.js';\r\nimport '../../public/js/mode-c_cpp.js';\r\nimport '../../public/js/theme-monokai.js';\r\nimport '../../public/js/worker-php.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedLanguage: 'c',\r\n      editor: null,\r\n      output: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.editor = ace.edit('editor');\r\n    this.editor.setTheme('ace/theme/monokai');\r\n    this.changeLanguage();\r\n  },\r\n  methods: {\r\n    changeLanguage() {\r\n      const language = this.selectedLanguage;\r\n\r\n      if (language === 'c' || language === 'cpp') this.editor.session.setMode('ace/mode/c_cpp');\r\n      else if (language === 'php') this.editor.session.setMode('ace/mode/php');\r\n      else if (language === 'python') this.editor.session.setMode('ace/mode/python');\r\n      else if (language === 'node') this.editor.session.setMode('ace/mode/javascript');\r\n    },\r\n    executeCode() {\r\n      const language = this.selectedLanguage;\r\n      const code = this.editor.getSession().getValue();\r\n\r\n      // Simulasikan eksekusi kode secara lokal\r\n      this.output = `Simulated output for ${language}: ${code}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.header {\r\n  background: #000000;\r\n  text-align: center;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  color: white;\r\n  padding: 10px;\r\n  font-family: sans-serif;\r\n  text-indent: -90px;\r\n}\r\n\r\n.control-panel {\r\n  text-align: right;\r\n  padding: 8px;\r\n  font-family: sans-serif;\r\n  font-size: 20px;\r\n  background: #000000;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n.languages {\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.editor {\r\n  height: 400px;\r\n  width: 47%;\r\n  float: left;\r\n  background: #252525;\r\n}\r\n\r\n.button-container {\r\n  clear: both;\r\n}\r\n\r\n.btn {\r\n  background: #000;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  border: 0;\r\n  float: right;\r\n}\r\n\r\n.output {\r\n  width: 53%;\r\n  resize: none;\r\n  height: 400px;\r\n  background: #252525;\r\n  color: white;\r\n  font-family: \"Consolas\", monospace;\r\n  font-size: 12.5px;\r\n  float: right;\r\n}\r\n\r\n.ace_active-line {\r\n  width: 99%;\r\n  background-color: black;\r\n}\r\n</style>\r\n"],"mappings":"AAyBA,OAAO,wBAAwB;AAC/B,OAAO,6BAA6B;AACpC,OAAO,oCAAoC;AAC3C,OAAO,+BAA+B;AACtC,OAAO,kCAAkC;AACzC,OAAO,+BAA+B;AAEtC,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,GAAG;MACrBC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,MAAK,GAAIG,GAAG,CAACC,IAAI,CAAC,QAAQ,CAAC;IAChC,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,mBAAmB,CAAC;IACzC,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAcA,CAAA,EAAG;MACf,MAAME,QAAO,GAAI,IAAI,CAACT,gBAAgB;MAEtC,IAAIS,QAAO,KAAM,GAAE,IAAKA,QAAO,KAAM,KAAK,EAAE,IAAI,CAACR,MAAM,CAACS,OAAO,CAACC,OAAO,CAAC,gBAAgB,CAAC,MACpF,IAAIF,QAAO,KAAM,KAAK,EAAE,IAAI,CAACR,MAAM,CAACS,OAAO,CAACC,OAAO,CAAC,cAAc,CAAC,MACnE,IAAIF,QAAO,KAAM,QAAQ,EAAE,IAAI,CAACR,MAAM,CAACS,OAAO,CAACC,OAAO,CAAC,iBAAiB,CAAC,MACzE,IAAIF,QAAO,KAAM,MAAM,EAAE,IAAI,CAACR,MAAM,CAACS,OAAO,CAACC,OAAO,CAAC,qBAAqB,CAAC;IAClF,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,MAAMH,QAAO,GAAI,IAAI,CAACT,gBAAgB;MACtC,MAAMa,IAAG,GAAI,IAAI,CAACZ,MAAM,CAACa,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;;MAEhD;MACA,IAAI,CAACb,MAAK,GAAK,wBAAuBO,QAAS,KAAII,IAAK,EAAC;IAC3D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}